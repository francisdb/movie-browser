/*
 * EditMovieFrame.java
 *
 * Created on 17 July 2008, 22:21
 */

package eu.somatik.moviebrowser;

import java.awt.Desktop;
import java.awt.event.MouseEvent;
import java.awt.event.MouseAdapter;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.HashSet;
import java.util.concurrent.ExecutionException;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import java.net.URLEncoder;
import java.net.URI;
import java.net.URISyntaxException;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.lang.Exception;

import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.HttpMethod;
import org.apache.commons.httpclient.methods.GetMethod;
import au.id.jericho.lib.html.HTMLElementName;
import au.id.jericho.lib.html.Source;
import au.id.jericho.lib.html.Element;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author  rug
 */
public class EditMovieFrame extends javax.swing.JFrame {

    private static final Logger LOGGER = LoggerFactory.getLogger(EditMovieFrame.class);
    private DefaultListModel listModel = new DefaultListModel();
    private Source source;
    
    /** Creates new form EditMovieFrame */
    public EditMovieFrame(String searchkey) {
        initComponents();
        searchTextField.setText(searchkey);
        
        resultsList.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            if (e.getClickCount() == 2) { 
                resultsListDoubleClick();
            }  
         }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchTextField = new javax.swing.JTextField();
        searchLabel = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultsList = new javax.swing.JList();
        updateButton = new javax.swing.JButton();
        statusProgressBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Edit Movie");

        searchLabel.setText("Look for:");

        searchButton.setText("Find");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        resultsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        resultsList.setToolTipText("Double click on results to go to IMDB page.");
        resultsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultsListMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                resultsListMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(resultsList);

        updateButton.setText("Update");
        updateButton.setToolTipText("Select the correct title from results and click me to update cache.");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        statusProgressBar.setForeground(new java.awt.Color(255, 153, 51));
        statusProgressBar.setString("");
        statusProgressBar.setStringPainted(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateButton)
                .addContainerGap())
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton)
                    .addComponent(searchLabel)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
    
    statusProgressBar.setIndeterminate(true);
    statusProgressBar.setString("Searching...");
    
    SwingWorker<Source, Void> worker = 
        new SwingWorker<Source, Void>() {
            public Source doInBackground() {
                try {
                    getResults();
                } 
                catch (Exception ex) {
                    System.out.println(ex);
                }
                Source temp = null;
                return temp;
            }
            
            public void done() {
                try {
                    get();
                }
                catch(InterruptedException ex) {
                    LOGGER.error("Get request intterrupted: ", ex);
                    statusProgressBar.setIndeterminate(false);
                    statusProgressBar.setString("Error Retrieving Results");
                }
                catch(ExecutionException ex) {
                    LOGGER.error("Get request failed: ", ex);
                    statusProgressBar.setIndeterminate(false);
                    statusProgressBar.setString("Error Retrieving Results");
                }
                catch(Exception ex) {
                    LOGGER.error("Get request failed: ", ex);
                    statusProgressBar.setIndeterminate(false);
                    statusProgressBar.setString("Error Retrieving Results");
                }
            }
    };
    worker.execute();
}//GEN-LAST:event_searchButtonActionPerformed

private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
    // TODO add your handling code here:
    JOptionPane.showMessageDialog(EditMovieFrame.this, "Not implemented");
}//GEN-LAST:event_updateButtonActionPerformed

private void resultsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultsListMouseClicked

}//GEN-LAST:event_resultsListMouseClicked

private void resultsListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultsListMouseReleased

}//GEN-LAST:event_resultsListMouseReleased

private void resultsListDoubleClick() {
    String URL;
    String[] split;
    URL = resultsList.getSelectedValue().toString();
    split = URL.split("~");
    URL = split[1].trim();
    
    try {
        Desktop.getDesktop().browse(new URI(URL));
    } catch (URISyntaxException ex) {
        LOGGER.error("Failed launching default browser for " + URL, ex);
    } catch (IOException ex) {
        LOGGER.error("Failed launching default browser for " + URL, ex);
    }   
}    

 private Source getRequest() throws Exception {
    HttpClient client = new HttpClient();
    HttpMethod method = new GetMethod("http://www.imdb.com/find?q=" + URLEncoder.encode(searchTextField.getText(), "UTF-8"));
    
    client.executeMethod(method);
    source = new Source(method.getResponseBodyAsStream()); 
    source.fullSequentialParse();
    return source;
 }
 
 private void getResults() throws Exception {
     
        source = getRequest();
        //System.out.println("This is the source: \n\n" + source);
        Element titleElement = (Element) source.findAllElements(HTMLElementName.TITLE).get(0);
        
        if (titleElement.getContent().getTextExtractor().toString().contains("IMDb Search")) {
            List<?> linkElements = source.findAllElements(HTMLElementName.A);
            Set linksSet = new HashSet(linkElements);
            
            for (Iterator<?> i = linksSet.iterator(); i.hasNext();) {
                Element linkElement = (Element) i.next();
                String href = linkElement.getAttributeValue("href");

                if (href != null && href.startsWith("/title/tt")) {
                    String name = linkElement.getContent().getTextExtractor().toString();
                    int questionMarkIndex = href.indexOf('?');
                    if (questionMarkIndex != -1) {
                        href = href.substring(0, questionMarkIndex);
                    }
                    if(!name.isEmpty()) {
                        listModel.addElement(name + " ~ " + "http://www.imdb.com" + href);
                    }
                    titleElement = (Element) source.findAllElements(HTMLElementName.TITLE).get(0);
                }
            }

        }
        resultsList.setModel(listModel);
        statusProgressBar.setIndeterminate(false);
        if(listModel.isEmpty())
            statusProgressBar.setString("No Results Found");
        else
            statusProgressBar.setString(listModel.getSize() + " Results Found");
 }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList resultsList;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JProgressBar statusProgressBar;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

}
